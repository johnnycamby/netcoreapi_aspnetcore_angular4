{"version":3,"sources":["cars/car.service.ts"],"names":["core_1","require","http_1","Observable_1","CarService","http","this","baseUrl","prototype","getCars","get","map","extractData","do","data","console","log","JSON","stringify","catch","handleError","getCar","id","Observable","of","initializeCar","url","response","json","error","throw","carModel","carName","description","rating","imageUrl","__decorate","Injectable","Http","exports"],"mappings":"wmBAAAA,OAAAC,QAAA,iBACAC,OAAAD,QAAA,iBAEAE,aAAAF,QAAA,kBACAA,SAAA,wBACAA,QAAA,2BACAA,QAAA,6BACAA,QAAA,yBACAA,QAAA,yBAMA,IAAaG,YAAU,WAKnB,QAAAA,YAAoBC,MAAAC,KAAAD,KAAAA,KAFZC,KAAAC,QAAU,WA2CtB,MAvCIH,YAAAI,UAAAC,QAAA,WACI,MAAOH,MAAKD,KAAKK,IAAIJ,KAAKC,SACrBI,IAAIL,KAAKM,aACTC,GAAG,SAAAC,MAAQ,MAAAC,SAAQC,IAAI,gBAAkBC,KAAKC,UAAUJ,SACxDK,MAAMb,KAAKc,cAGpBhB,WAAAI,UAAAa,OAAA,SAAOC,IACH,GAAW,OAAPA,GACA,MAAOnB,cAAAoB,WAAWC,GAAGlB,KAAKmB,gBAG9B,IAAMC,KAASpB,KAAKC,QAAO,IAAIe,EAC/B,OAAOhB,MAAKD,KAAKK,IAAIgB,KAChBf,IAAIL,KAAKM,aACTC,GAAG,SAAAC,MAAQ,MAAAC,SAAQC,IAAI,eAAiBC,KAAKC,UAAUJ,SACvDK,MAAMb,KAAKc,cAGZhB,WAAAI,UAAAI,YAAR,SAAoBe,UAEhB,MADWA,UAASC,OACRd,UAGRV,WAAAI,UAAAY,YAAR,SAAoBS,OAEhB,MADAd,SAAQc,MAAMA,OACP1B,aAAAoB,WAAWO,MAAMD,MAAMD,OAAOC,OAAS,iBAGlDzB,WAAAI,UAAAiB,cAAA,WACI,OACIH,GAAI,KACJS,SAAU,KACVC,QAAS,KACTC,YAAa,KACbC,OAAQ,KACRC,SAAU,OAGtB/B,aA9CaA,YAAUgC,YADtBpC,OAAAqC,6CAM6BnC,OAAAoC,QALjBlC,YAAAmC,QAAAnC,WAAAA","file":"car.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\r\n\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/do';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/observable/throw';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/observable/of';\r\n\r\n\r\nimport { ICar } from './car';\r\n\r\n@Injectable()\r\nexport class CarService {\r\n\r\n    // api/companies/{companyId}/cars\r\n    private baseUrl = 'api/cars';\r\n\r\n    constructor(private http: Http) { }\r\n\r\n    getCars(): Observable<ICar[]> {\r\n        return this.http.get(this.baseUrl)\r\n            .map(this.extractData)\r\n            .do(data => console.log('getProducts: ' + JSON.stringify(data)))\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    getCar(id: string): Observable<ICar> {\r\n        if (id === null) {\r\n            return Observable.of(this.initializeCar());\r\n        }\r\n\r\n        const url = `${this.baseUrl}/${id}`;\r\n        return this.http.get(url)\r\n            .map(this.extractData)\r\n            .do(data => console.log('getProduct: ' + JSON.stringify(data)))\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    private extractData(response: Response) {\r\n        let body = response.json();\r\n        return body.data || {};\r\n    }\r\n\r\n    private handleError(error: Response): Observable<any> {\r\n        console.error(error);\r\n        return Observable.throw(error.json().error || 'Server error');\r\n    }\r\n\r\n    initializeCar(): ICar {\r\n        return {\r\n            id: null,\r\n            carModel: null,\r\n            carName: null,\r\n            description: null,\r\n            rating: null,\r\n            imageUrl: null\r\n        };\r\n    }\r\n}\r\n\r\n"]}