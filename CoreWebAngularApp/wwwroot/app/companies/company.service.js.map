{"version":3,"sources":["companies/company.service.ts"],"names":["core_1","require","http_1","Observable_1","CompanyService","http","this","baseUrl","prototype","getCompanies","get","map","retrieveData","do","data","console","log","JSON","stringify","catch","handleError","response","json","error","Observable","throw","__decorate","Injectable","Http","exports"],"mappings":"wmBAAAA,OAAAC,QAAA,iBACAC,OAAAD,QAAA,iBAEAE,aAAAF,QAAA,kBACAA,SAAA,wBACAA,QAAA,2BACAA,QAAA,6BACAA,QAAA,yBACAA,QAAA,yBAKA,IAAaG,gBAAc,WAIvB,QAAAA,gBAAoBC,MAAAC,KAAAD,KAAAA,KAFZC,KAAAC,QAAU,gBAsBtB,MAlBIH,gBAAAI,UAAAC,aAAA,WACI,MAAOH,MAAKD,KAAKK,IAAIJ,KAAKC,SACrBI,IAAIL,KAAKM,cACTC,GAAG,SAAAC,MAAQ,MAAAC,SAAQC,IAAI,iBAAmBC,KAAKC,UAAUJ,SACzDK,MAAMb,KAAKc,cAGZhB,eAAAI,UAAAI,aAAR,SAAqBS,UAEjB,MADWA,UAASC,OACRR,UAGRV,eAAAI,UAAAY,YAAR,SAAoBG,OAIhB,MADAR,SAAQQ,MAAMA,OACPpB,aAAAqB,WAAWC,MAAMF,MAAMD,OAAOC,OAAS,iBAEtDnB,iBAxBaA,gBAAcsB,YAD1B1B,OAAA2B,6CAK6BzB,OAAA0B,QAJjBxB,gBAAAyB,QAAAzB,eAAAA","file":"company.service.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/of';\n\nimport { ICompany} from './company';\n\n@Injectable()\nexport class CompanyService {\n\n    private baseUrl = 'api/companies';\n\n    constructor(private http: Http) { }\n\n    getCompanies(): Observable<ICompany[]> {\n        return this.http.get(this.baseUrl)\n            .map(this.retrieveData)\n            .do(data => console.log('getCompanies: ' + JSON.stringify(data)))\n            .catch(this.handleError);\n    }\n\n    private retrieveData(response: Response) {\n        let body = response.json();\n        return body.data || {};\n    }\n\n    private handleError(error: Response): Observable<any> {\n\n        // TODO: send the server to some remote logging infrastructure, instead of just logging it to the console\n        console.error(error);\n        return Observable.throw(error.json().error || 'Server error');\n    }\n}\n"]}